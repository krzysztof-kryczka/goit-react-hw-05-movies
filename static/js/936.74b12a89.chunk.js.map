{"version":3,"file":"static/js/936.74b12a89.chunk.js","mappings":"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","sources":["webpack://react-the-movie-db/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-the-movie-db/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://react-the-movie-db/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","consts/consts.js","webpack://react-the-movie-db/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"threeCircles\":\"Loader_threeCircles__HPJ-9\"};","import { ThreeCircles } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      wrapperStyle={{}}\n      wrapperClass={styles.threeCircles}\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList__link\":\"MovieListItem_moviesList__link__lE3c6\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieListItem.module.css';\n\nconst MovieListItem = ({ id, title }) => {\n  const location = useLocation();\n  const nextPath = location.pathname === '/' ? 'movies/' : '';\n\n  return (\n    <Link\n      className={css.moviesList__link}\n      to={`${nextPath}${id}`}\n      state={{ from: location }}\n    >\n      {title}\n    </Link>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\n// At the moment, React.lazy() does not support using named\n// exports for React components. If you wish to use named exports\n// containing React components, you need to reexport them as\n// default exports in separate intermediate modules.\n\nexport { MovieListItem as default };\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieList_moviesList__oxGXM\",\"moviesList__item\":\"MovieList_moviesList__item__wbg7G\"};","import PropTypes from 'prop-types';\nimport MovieListItem from '#components/MovieListItem/MovieListItem';\nimport css from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(({ id, title }) => (\n        <li className={css.moviesList__item} key={id}>\n          <MovieListItem title={title} id={id} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\n// At the moment, React.lazy() does not support using named\n// exports for React components. If you wish to use named exports\n// containing React components, you need to reexport them as\n// default exports in separate intermediate modules.\n\nexport { MovieList as default };\n","export const API_KEY = process.env.REACT_APP_API_KEY;\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const API_ENDPOINTS = {\n  TRENDING_MOVIES: '/trending/movie/day',\n  MOVIE_DETAILS: '/movie/',\n  SEARCH_MOVIE: '/search/movie',\n};\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const ERROR_MESSAGE = 'Oops! Sorry, something went wrong. ðŸ˜¢';\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useState, useEffect } from 'react';\nimport { Loader } from '#components/Loader/Loader';\nimport { fetchTrendingMovies } from '#services/themoviedb-api';\nimport { STATUS } from '#consts/consts';\nimport MovieList from '#components/MovieList/MovieList';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState();\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    trendingToday();\n  }, []);\n\n  const trendingToday = async () => {\n    setStatus(STATUS.PENDING);\n    setLoader(true);\n    try {\n      const dailyMovies = await fetchTrendingMovies();\n      setMovies(dailyMovies);\n      setStatus(STATUS.RESOLVED);\n    } catch (err) {\n      setError(err.message);\n      setStatus(STATUS.REJECTED);\n      console.log(err.message);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  switch (status) {\n    case STATUS.PENDING:\n      return loader && <Loader />;\n\n    case STATUS.RESOLVED:\n      return movies?.length ? (\n        <main>\n          <h1 className={css.title}>Trending today</h1>\n          <MovieList movies={movies} />\n        </main>\n      ) : (\n        <p>There isn't any movie on this page.</p>\n      );\n\n    case STATUS.REJECTED:\n      return <p>{error}</p>;\n\n    default:\n      break;\n  }\n};\n\n// At the moment, React.lazy() does not support using named\n// exports for React components. If you wish to use named exports\n// containing React components, you need to reexport them as\n// default exports in separate intermediate modules.\n\nexport { Home as default };\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nimport {\n  API_KEY,\n  API_BASE_URL,\n  API_ENDPOINTS,\n  ERROR_MESSAGE,\n} from '#consts/consts';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.params = { api_key: API_KEY };\n\n// a list of the most popular movies for today to create a collection on the home page page.\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios(API_ENDPOINTS.TRENDING_MOVIES);\n    return response.data.results;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n\n// Request full movie info for the movie page.\nexport const fetchMovieDetailsById = async (id, extraInfo = '') => {\n  const extraInfoPath = extraInfo ? `/${extraInfo}` : '';\n  try {\n    const response = await axios(\n      `${API_ENDPOINTS.MOVIE_DETAILS}${id}${extraInfoPath}`\n    );\n    return response.data;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n\n// keyword search for a movie on the movies page.\nexport const fetchMovieByKeyword = async search => {\n  const queryParams = `?query=${search}`;\n  try {\n    const response = await axios(`${API_ENDPOINTS.SEARCH_MOVIE}${queryParams}`);\n    return response.data.results;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n"],"names":["Loader","_jsx","ThreeCircles","height","width","color","wrapperStyle","wrapperClass","styles","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","MovieListItem","_ref","id","title","location","useLocation","nextPath","pathname","Link","className","css","to","concat","state","from","children","MovieList","movies","map","_ref2","API_KEY","process","API_BASE_URL","API_ENDPOINTS","TRENDING_MOVIES","MOVIE_DETAILS","SEARCH_MOVIE","STATUS","IDLE","PENDING","RESOLVED","REJECTED","ERROR_MESSAGE","Home","setMovies","useState","status","setStatus","error","setError","loader","setLoader","useEffect","trendingToday","async","dailyMovies","fetchTrendingMovies","err","message","console","log","length","_jsxs","axios","defaults","baseURL","params","api_key","data","results","Error","Notiflix","failure","fetchMovieDetailsById","extraInfo","arguments","undefined","extraInfoPath","fetchMovieByKeyword","queryParams","search"],"sourceRoot":""}