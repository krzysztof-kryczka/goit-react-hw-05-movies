{"version":3,"file":"static/js/600.c0841d3e.chunk.js","mappings":"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","sources":["webpack://react-the-movie-db/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-the-movie-db/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://react-the-movie-db/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","consts/consts.js","webpack://react-the-movie-db/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"threeCircles\":\"Loader_threeCircles__HPJ-9\"};","import { ThreeCircles } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      wrapperStyle={{}}\n      wrapperClass={styles.threeCircles}\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList__link\":\"MovieListItem_moviesList__link__lE3c6\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieListItem.module.css';\n\nconst MovieListItem = ({ id, title }) => {\n  const location = useLocation();\n  const nextPath = location.pathname === '/' ? 'movies/' : '';\n\n  return (\n    <Link\n      className={css.moviesList__link}\n      to={`${nextPath}${id}`}\n      state={{ from: location }}\n    >\n      {title}\n    </Link>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\n// At the moment, React.lazy() does not support using named\n// exports for React components. If you wish to use named exports\n// containing React components, you need to reexport them as\n// default exports in separate intermediate modules.\n\nexport { MovieListItem as default };\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieList_moviesList__oxGXM\",\"moviesList__item\":\"MovieList_moviesList__item__wbg7G\"};","import PropTypes from 'prop-types';\nimport MovieListItem from '#components/MovieListItem/MovieListItem';\nimport css from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(({ id, title }) => (\n        <li className={css.moviesList__item} key={id}>\n          <MovieListItem title={title} id={id} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\n// At the moment, React.lazy() does not support using named\n// exports for React components. If you wish to use named exports\n// containing React components, you need to reexport them as\n// default exports in separate intermediate modules.\n\nexport { MovieList as default };\n","export const API_KEY = process.env.REACT_APP_API_KEY;\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const API_ENDPOINTS = {\n  TRENDING_MOVIES: '/trending/movie/day',\n  MOVIE_DETAILS: '/movie/',\n  SEARCH_MOVIE: '/search/movie',\n};\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const ERROR_MESSAGE = 'Oops! Sorry, something went wrong. ðŸ˜¢';\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchInput\":\"SearchForm_searchInput__h6REp\",\"searchButton\":\"SearchForm_searchButton__AQHxA\"};","import { useState } from 'react';\nimport css from './SearchForm.module.css';\n\nexport const SearchForm = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const changeQuery = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) return;\n    onSearch(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={css.searchInput}\n        type=\"text\"\n        placeholder=\"Enter for search movies\"\n        name=\"query\"\n        value={query}\n        onChange={changeQuery}\n      />\n      <button className={css.searchButton} type=\"submit\">\n        Search Movie\n      </button>\n    </form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '#components/Loader/Loader';\nimport { fetchMovieByKeyword } from '#services/themoviedb-api';\nimport { STATUS } from '#consts/consts';\nimport MovieList from '#components/MovieList/MovieList';\nimport { SearchForm } from '#components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const moviesName = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState();\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState();\n  const [loader, setLoader] = useState(false);\n\n  const handleOnSubmit = query => {\n    const changeParams = query !== '' ? { query } : {};\n    setSearchParams(changeParams);\n  };\n\n  useEffect(() => {\n    if (!moviesName) return;\n    console.log(moviesName);\n    const getSearchMovie = async () => {\n      setStatus(STATUS.PENDING);\n      setLoader(true);\n      try {\n        const response = await fetchMovieByKeyword(moviesName);\n        console.log(response);\n        setMovies(response);\n        setStatus(STATUS.RESOLVED);\n      } catch (err) {\n        setError(err.message);\n        setStatus(STATUS.REJECTED);\n        console.log(err.message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getSearchMovie();\n  }, [moviesName]);\n\n  return (\n    <>\n      <SearchForm value={moviesName} onSearch={handleOnSubmit} />\n      {status === STATUS.PENDING && loader && <Loader />}\n      {status === STATUS.REJECTED && <p>{error}</p>}\n      {status === STATUS.RESOLVED && movies?.length > 0 && (\n        <MovieList movies={movies} />\n      )}\n    </>\n  );\n};\n\n// At the moment, React.lazy() does not support using named\n// exports for React components. If you wish to use named exports\n// containing React components, you need to reexport them as\n// default exports in separate intermediate modules.\n\nexport { Movies as default };\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nimport {\n  API_KEY,\n  API_BASE_URL,\n  API_ENDPOINTS,\n  ERROR_MESSAGE,\n} from '#consts/consts';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.params = { api_key: API_KEY };\n\n// a list of the most popular movies for today to create a collection on the home page page.\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios(API_ENDPOINTS.TRENDING_MOVIES);\n    return response.data.results;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n\n// Request full movie info for the movie page.\nexport const fetchMovieDetailsById = async (id, extraInfo = '') => {\n  const extraInfoPath = extraInfo ? `/${extraInfo}` : '';\n  try {\n    const response = await axios(\n      `${API_ENDPOINTS.MOVIE_DETAILS}${id}${extraInfoPath}`\n    );\n    return response.data;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n\n// keyword search for a movie on the movies page.\nexport const fetchMovieByKeyword = async search => {\n  const queryParams = `?query=${search}`;\n  try {\n    const response = await axios(`${API_ENDPOINTS.SEARCH_MOVIE}${queryParams}`);\n    return response.data.results;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n"],"names":["Loader","_jsx","ThreeCircles","height","width","color","wrapperStyle","wrapperClass","styles","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","MovieListItem","_ref","id","title","location","useLocation","nextPath","pathname","Link","className","css","to","concat","state","from","children","MovieList","movies","map","_ref2","API_KEY","process","API_BASE_URL","API_ENDPOINTS","TRENDING_MOVIES","MOVIE_DETAILS","SEARCH_MOVIE","STATUS","IDLE","PENDING","RESOLVED","REJECTED","ERROR_MESSAGE","SearchForm","onSearch","query","setQuery","useState","_jsxs","onSubmit","e","preventDefault","type","placeholder","name","value","onChange","target","toLowerCase","Movies","_searchParams$get","searchParams","setSearchParams","useSearchParams","moviesName","get","setMovies","status","setStatus","error","setError","loader","setLoader","useEffect","console","log","async","response","fetchMovieByKeyword","err","message","getSearchMovie","_Fragment","length","axios","defaults","baseURL","params","api_key","fetchTrendingMovies","data","results","Error","Notiflix","failure","fetchMovieDetailsById","extraInfo","arguments","undefined","extraInfoPath","queryParams","search"],"sourceRoot":""}