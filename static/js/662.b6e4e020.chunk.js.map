{"version":3,"file":"static/js/662.b6e4e020.chunk.js","mappings":"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","sources":["webpack://react-the-movie-db/./src/components/Cast/Cast.module.css?c9ee","webpack://react-the-movie-db/./src/components/ActorListItem/ActorListItem.module.css?fd2e","components/ActorListItem/ActorListItem.jsx","webpack://react-the-movie-db/./src/components/ActorList/ActorList.module.css?ed46","components/ActorList/ActorList.jsx","components/Cast/Cast.jsx","webpack://react-the-movie-db/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","consts/consts.js","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\"};","// extracted by mini-css-extract-plugin\nexport default {\"castImg\":\"ActorListItem_castImg__H8o+F\",\"castActor__Desc\":\"ActorListItem_castActor__Desc__3OnqC\",\"castActor__Name\":\"ActorListItem_castActor__Name__1KYpP\",\"castActor__Character\":\"ActorListItem_castActor__Character__sNBSv\"};","import PropTypes from 'prop-types';\nimport css from './ActorListItem.module.css';\nimport noPhoto from './no-image-actor.jpg';\n\nexport const ActorListItem = ({ name, character, photo }) => {\n  const photoUrl = photo ? `https://image.tmdb.org/t/p/w200${photo}` : noPhoto;\n\n  return (\n    <>\n      <img\n        className={css.castImg}\n        width=\"200\"\n        src={photoUrl}\n        alt={`${name}`}\n      ></img>\n      <div className={css.castActor__Desc}>\n        <p className={css.castActor__Name}>{name}</p>\n        <p>\n          <span className={css.castActor__Character}>character:</span>\n          {character}\n        </p>\n      </div>\n    </>\n  );\n};\n\nActorListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  photo: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"ActorList_castList__hyHeC\",\"castItem\":\"ActorList_castItem__Qxqg4\"};","import PropTypes from 'prop-types';\nimport { ActorListItem } from '#components/ActorListItem/ActorListItem';\nimport css from './ActorList.module.css';\n\nexport const ActorList = ({ actors }) => {\n  return (\n    <ul className={css.castList}>\n      {actors.map(({ id, name, character, profile_path }) => (\n        <li className={css.castItem} key={id}>\n          <ActorListItem\n            name={name}\n            character={character}\n            photo={profile_path ? profile_path : ''}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nActorList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_pathid: PropTypes.string,\n    })\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Loader } from '#components/Loader/Loader';\nimport { fetchMovieDetailsById } from '#services/themoviedb-api';\nimport css from './Cast.module.css';\nimport { ActorList } from '#components/ActorList/ActorList';\nimport { STATUS } from '#consts/consts';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCasts, setMovieCasts] = useState();\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      setStatus(STATUS.PENDING);\n      setLoader(true);\n      try {\n        const details = await fetchMovieDetailsById(movieId, 'credits');\n        setMovieCasts(details.cast);\n        setStatus(STATUS.RESOLVED);\n      } catch (err) {\n        setError(err.message);\n        setStatus(STATUS.REJECTED);\n        console.log(err.message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  switch (status) {\n    case STATUS.PENDING:\n      return loader && <Loader />;\n\n    case STATUS.RESOLVED:\n      return movieCasts.length ? (\n        <ActorList actors={movieCasts} />\n      ) : (\n        <p className={css.cast}>\n          We don't have any info about actors for this movie.\n        </p>\n      );\n\n    case STATUS.REJECTED:\n      return <p>{error}</p>;\n\n    default:\n      break;\n  }\n};\n\n// At the moment, React.lazy() does not support using named\n// exports for React components. If you wish to use named exports\n// containing React components, you need to reexport them as\n// default exports in separate intermediate modules.\n\nexport { Cast as default };\n","// extracted by mini-css-extract-plugin\nexport default {\"threeCircles\":\"Loader_threeCircles__HPJ-9\"};","import { ThreeCircles } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      wrapperStyle={{}}\n      wrapperClass={styles.threeCircles}\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n    />\n  );\n};\n","export const API_KEY = process.env.REACT_APP_API_KEY;\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const API_ENDPOINTS = {\n  TRENDING_MOVIES: '/trending/movie/day',\n  MOVIE_DETAILS: '/movie/',\n  SEARCH_MOVIE: '/search/movie',\n};\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const ERROR_MESSAGE = 'Oops! Sorry, something went wrong. ðŸ˜¢';\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nimport {\n  API_KEY,\n  API_BASE_URL,\n  API_ENDPOINTS,\n  ERROR_MESSAGE,\n} from '#consts/consts';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.params = { api_key: API_KEY };\n\n// a list of the most popular movies for today to create a collection on the home page page.\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios(API_ENDPOINTS.TRENDING_MOVIES);\n    return response.data.results;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n\n// Request full movie info for the movie page.\nexport const fetchMovieDetailsById = async (id, extraInfo = '') => {\n  const extraInfoPath = extraInfo ? `/${extraInfo}` : '';\n  try {\n    const response = await axios(\n      `${API_ENDPOINTS.MOVIE_DETAILS}${id}${extraInfoPath}`\n    );\n    return response.data;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n\n// keyword search for a movie on the movies page.\nexport const fetchMovieByKeyword = async search => {\n  const queryParams = `?query=${search}`;\n  try {\n    const response = await axios(`${API_ENDPOINTS.SEARCH_MOVIE}${queryParams}`);\n    return response.data.results;\n  } catch {\n    throw new Error(Notiflix.Notify.failure(ERROR_MESSAGE));\n  }\n};\n"],"names":["ActorListItem","_ref","name","character","photo","photoUrl","concat","_jsxs","_Fragment","children","_jsx","className","css","width","src","alt","ActorList","actors","map","_ref2","id","profile_path","Cast","movieId","useParams","movieCasts","setMovieCasts","useState","status","setStatus","STATUS","IDLE","error","setError","loader","setLoader","useEffect","async","PENDING","details","fetchMovieDetailsById","cast","RESOLVED","err","message","REJECTED","console","log","getMovieDetails","Loader","length","ThreeCircles","height","color","wrapperStyle","wrapperClass","styles","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","API_KEY","process","API_BASE_URL","API_ENDPOINTS","TRENDING_MOVIES","MOVIE_DETAILS","SEARCH_MOVIE","ERROR_MESSAGE","axios","defaults","baseURL","params","api_key","fetchTrendingMovies","data","results","Error","Notiflix","failure","extraInfo","arguments","undefined","extraInfoPath","fetchMovieByKeyword","queryParams","search"],"sourceRoot":""}